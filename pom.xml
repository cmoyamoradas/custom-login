<!--
  ~ Copyright 2017 Okta, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.1</version>
    </parent>

    <groupId>com.okta.demo</groupId>
    <artifactId>trickynickel</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Okta :: Samples :: Spring Boot :: Demo</name>
    <description>Okta Demo for Solutions Engineer position</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <!--Okta spring boot starter-->
        <dependency>
            <groupId>com.okta.spring</groupId>
            <artifactId>okta-spring-boot-starter</artifactId>
            <version>2.1.2</version>
        </dependency>

        <!-- Spring Boot dependencies-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>9.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>2.3.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
            <version>2.5.6</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <!-- Required for any libraries that expect to call the commons logging APIs -->
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>

    </dependencies>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>false</fork>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Everything below here is to test this project, you wouldn't need the remaining in your own project -->
    <profiles>
        <profile>
            <id>okta-tck</id>

            <properties>
                <node.version>v10.15.1</node.version>
            </properties>

            <build>
                <plugins>
                    <!-- Tell failsafe to run Okta's oidc-tck -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.1</version>
                        <configuration>
                            <dependenciesToScan>
                                <dependency>com.okta.oidc.tck:okta-oidc-tck</dependency>
                            </dependenciesToScan>
                            <systemPropertyVariables>
                                <okta.tck.redirectOnError>true</okta.tck.redirectOnError>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                             <id>unpack</id>
                             <phase>package</phase>
                             <goals>
                               <goal>unpack</goal>
                             </goals>
                             <configuration>
                                <artifactItems>
                                    <!-- extract the tck UI tests -->
                                    <artifactItem>
                                        <groupId>com.okta.oidc.tck</groupId>
                                        <artifactId>okta-oidc-tck</artifactId>
                                        <classifier>e2e</classifier>
                                        <type>zip</type>
                                        <outputDirectory>${project.build.testOutputDirectory}/</outputDirectory>
                                    </artifactItem>
                                    <!-- extract the tck keystore -->
                                    <artifactItem>
                                        <groupId>com.okta.oidc.tck</groupId>
                                        <artifactId>okta-oidc-tck</artifactId>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                        <destFileName>tck-keystore.jks</destFileName>
                                        <includes>tck-keystore.jks</includes>
                                    </artifactItem>
                                </artifactItems>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>true</overWriteSnapshots>
                             </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
